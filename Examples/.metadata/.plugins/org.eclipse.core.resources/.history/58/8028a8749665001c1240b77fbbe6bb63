/**
  ******************************************************************************
  * @file    main.c
  * @author  Ac6
  * @version V1.0
  * @date    01-December-2013
  * @brief   Default main function.
  ******************************************************************************
*/


#include "stm32f10x.h"
#include "uart_driver.h"
#include "i2c_driver.h"
#include <stdio.h>
int main(void)
{


	SystemCoreClockUpdate();

	uint8_t receivedByte ;


#ifdef ENABLE_UART
		uart_init();
#endif
#ifdef ENABLE_I2C
		i2c_int();
		//I2C_init();
		send_data("I2C Init Done");
		send_byte('\n');
		send_byte('\r');
		//i2c_write(SLAVE_ADDRESS, 0x75);
		i2c_send_data(WHO_AM_I_REG);
		//i2c_read(SLAVE_ADDRESS, &receivedByte);
		receivedByte = i2c_receive_data();
		uint8_t buf[20];
		sprintf(buf,"%d",receivedByte);
		send_data("MPU6050 Driver: WHO AM I : ");
		send_data(&buf);
		send_byte('\n');
		send_byte('\r');
for(;;);
//Writing in the PWR_1 Reg
		i2c_send_data(PWR_1_REG);
		while(I2C1->SR1&(uint32_t)0x00000080);
		send_data("PWR_1 Reg address Sent");
		send_byte('\n');
		send_byte('\r');
//Writing in the PWR_1 Reg to Wake up MPU
		i2c_send_data(0x0);
		while(I2C1->SR1&(uint32_t)0x00000080);
		send_data("MPU Wakeup done");
		send_byte('\n');
		send_byte('\r');
//Send repeated start condition here
		send_start();
		send_data("I2C Start sent");
		send_byte('\n');
		send_byte('\r');
//Send adddress of the slave in read mode
		i2c_send_data(MPU_ADDRESS);
		while(I2C1->SR1&(uint32_t)0x00000002);
		send_data("Slave address sent");
		send_byte('\n');
		send_byte('\r');
#endif




	}
